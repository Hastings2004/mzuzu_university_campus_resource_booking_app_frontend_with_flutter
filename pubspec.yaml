name: resource_booking_app
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  qr_flutter: ^4.1.0  

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  firebase_core: ^3.13.0
  firebase_auth: ^5.5.3
  cloud_firestore: ^5.6.7
  http: ^1.4.0
  firebase_storage: ^12.4.5
  image_picker: ^1.1.2
  shared_preferences: ^2.5.3
  intl: ^0.20.2
  table_calendar: ^3.0.9
  flutter_native_splash: ^2.4.6
  file_picker: ^8.0.0
  rename_app: ^1.6.3
  

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^5.0.0
  flutter_launcher_icons: "^0.14.4"

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
      - assets/images/logo.png
      - assets/images/resource.jpg
      - assets/images/hes.jpg
      - assets/images/chari.jpg
      - assets/images/ju.jpg
      - assets/images/charity.jpg
      - assets/images/default.png
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package

# flutter_native_splash section moved to root level
flutter_native_splash:
  color: "#FFFFFF"
  image: assets/images/logo.png
  text: "Mzuzu University Resource Booking App"
  android_12:
    image: assets/images/logo.png
    branding: "Mzuzu University Resource Booking App"
    #color: "#FFFFFF"

    # Splash screen background color.
    #icon_background_color: "#111111"

    # The branding property allows you to specify an image used as branding in the splash screen.
    #branding: assets/dart.png

    # The image_dark, color_dark, icon_background_color_dark, and branding_dark set values that
    # apply when the device is in dark mode. If they are not specified, the app will use the
    # parameters from above.  If there is no parameter above, the app will use the light mode values.
    #image_dark: assets/android12splash-invert.png
    #color_dark: "#042a49"
    #icon_background_color_dark: "#eeeeee"

    # The android, ios and web parameters can be used to disable generating a splash screen on a given
    # platform.
    #android: false
    #ios: false
    #web: false

    # Platform specific images can be specified with the following parameters, which will override
    # the respective parameter.  You may specify all, selected, or none of these parameters:
    #color_android: "#42a5f5"
    #color_dark_android: "#042a49"
    #color_ios: "#42a5f5"
    #color_dark_ios: "#042a49"
    #color_web: "#42a5f5"
    #color_dark_web: "#042a49"
    #image_android: assets/splash-android.png
    #image_dark_android: assets/splash-invert-android.png
    #image_ios: assets/splash-ios.png
    #image_dark_ios: assets/splash-invert-ios.png
    #image_web: assets/splash-web.gif
    #image_dark_web: assets/splash-invert-web.gif
    #background_image_android: "assets/background-android.png"
    #background_image_dark_android: "assets/dark-background-android.png"
    #background_image_ios: "assets/background-ios.png"
    #background_image_dark_ios: "assets/dark-background-ios.png"
    #background_image_web: "assets/background-web.png"
    #background_image_dark_web: "assets/dark-background-web.png"
    #branding_android: assets/brand-android.png
    #branding_bottom_padding_android: 24
    #branding_dark_android: assets/dart_dark-android.png
    #branding_ios: assets/brand-ios.png
    #branding_bottom_padding_ios: 24
    #branding_dark_ios: assets/dart_dark-ios.png
    #branding_web: assets/brand-web.gif
    #branding_dark_web: assets/dart_dark-web.gif

    # The position of the splash image can be set with android_gravity, ios_content_mode, and
    # web_image_mode parameters.  All default to center.
    #
    # android_gravity can be one of the following Android Gravity (see
    # https://developer.android.com/reference/android/view/Gravity): bottom, center,
    # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
    # fill_vertical, left, right, start, or top. android_gravity can be combined using the | operator to achieve multiple effects.
    # For example:
    # `android_gravity: fill|clip_vertical` - This will fill the width while maintaining the image's vertical aspect ratio
    #android_gravity: center
    #
    # ios_content_mode can be one of the following iOS UIView.ContentMode (see
    # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
    # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
    # bottomLeft, or bottomRight.
    #ios_content_mode: center
    #
    # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
    #web_image_mode: center

    # The screen orientation can be set in Android with the android_screen_orientation parameter.
    # Valid parameters can be found here:
    # https://developer.android.com/guide/topics/manifest/activity-element#screen
    #android_screen_orientation: sensorLandscape

    # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web
    # has no notification bar.  Defaults to false.
    # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
    #       To show the notification bar, add the following code to your Flutter app:
    #       WidgetsFlutterBinding.ensureInitialized();
    #       SystemChrome.setEnabledSystemUIMode(SystemUiMode.manual, overlays: [SystemUiOverlay.bottom, SystemUiOverlay.top], );
    #fullscreen: true

    # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
    # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
    # do not remove any spaces:
    #info_plist_files:
    #  - 'ios/Runner/Info-Debug.plist'
    #  - 'ios/Runner/Info-Release.plist'

flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/images/logo.png"
  min_sdk_android: 21 # android min sdk min:16, default 21
  web:
    generate: true
    image_path: "assets/images/logo.png"
    background_color: "#FFFFFF"
    theme_color: "#FFFFFF"
  windows:
    generate: true
    image_path: "assets/images/logo.png"
    icon_size: 48 # min:48, max:256, default: 48
  macos:
    generate: true
    image_path: "assets/images/logo.png"
    background_color: "#FFFFFF"
    theme_color: "#FFFFFF"
  linux:
    generate: true
    image_path: "assets/images/logo.png"
    background_color: "#FFFFFF"
    theme_color: "#FFFFFF"